version = (2, 2, 8)

# meta developer: @RUIS_VlP

import random
from datetime import timedelta

from telethon import functions
from telethon.tl.types import Message

from .. import loader, utils


@loader.tds
class IrisSupMod(loader.Module):
    """–°–∞–ø–ø–æ—Ä—Ç –¥–ª—è –ª—Å"""

    strings = {
        "name": "irissup",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.myid = (await client.get_me()).id
        self.iris = 5443619563

    async def message_q(
        self,
        text: str,
        user_id: int,
        mark_read: bool = False,
        delete: bool = False,
    ):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç"""
        async with self.client.conversation(user_id) as conv:
            msg = await conv.send_message(text)
            response = await conv.get_response()
            if mark_read:
                await conv.mark_read()

            if delete:
                await msg.delete()
                await response.delete()

            return response
        
    @loader.command()
    async def –∫–æ–º–∞–Ω–¥—ã(self, message):
        """–ö–æ–º–∞–Ω–¥—ã Iris Support Bot"""
        ihelp = (
            "–ö–æ–º–∞–Ω–¥—ã Iris Support Bot: https://teletype.in/@iris_cm/isb_commands"
        )
        await utils.answer(message, ihelp)
    
    
    @loader.command()
    async def –ø–µ—Ä–µ–≤–æ–¥(self, message):
        """–ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é Iris Support Bot"""
        bot = "@IrisSupportBot"
        if len(message.text) < 11:
        	try:
        		reply = await message.get_reply_message()
        		text = reply.raw_text
        		text = f".–ø–µ—Ä–µ–≤–µ–¥–∏ \n{text}"
        		givs = await self.message_q(text, bot, mark_read=True, delete=True)
        		await utils.answer(message, givs)
        		return
        	except:
        		await utils.answer(message, "–ì–¥–µ —Ç–µ–∫—Å—Ç?")
        		return
        text = f".–ø–µ—Ä–µ–≤–µ–¥–∏ {message.text[9:]}"
        givs = await self.message_q(
            text,
            bot,
            mark_read=True,
            delete=True,
        )
        await utils.answer(message, givs.text)
        
    @loader.command()
    async def —Ä–∞—Å–∫–ª–∞–¥–∫–∞(self, message):
        """–º–µ–Ω—è–µ—Ç —Ä–∞—Å–∫–ª–∞–¥–∫—É —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é Iris Support Bot"""
        bot = "@IrisSupportBot"
        if len(message.text) < 15:
        	try:
        		reply = await message.get_reply_message()
        		text = reply.raw_text
        		text = f".—Ä–∞—Å–∫–ª–∞–¥–∫–∞ {text}"
        		givs = await self.message_q(text, bot, mark_read=True, delete=True)
        		await utils.answer(message, givs)
        		return
        	except:
        		await utils.answer(message, "–ì–¥–µ —Ç–µ–∫—Å—Ç?")
        		return
        text = f".—Ä–∞—Å–∫–ª–∞–¥–∫–∞ {message.text[11:]}"
        givs = await self.message_q(
            text,
            bot,
            mark_read=True,
            delete=True,
        )
        await utils.answer(message, givs.text)
        
    @loader.command()
    async def –¥–ª–∏–Ω–∞(self, message):
        """–ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é Iris Support Bot"""
        bot = "@IrisSupportBot"
        if len(message.text) < 10:
        	try:
        		reply = await message.get_reply_message()
        		text = reply.raw_text
        		text = f".–¥–ª–∏–Ω–∞ {text}"
        		givs = await self.message_q(text, bot, mark_read=True, delete=True)
        		await utils.answer(message, givs)
        		return
        	except:
        		await utils.answer(message, "–ì–¥–µ —Ç–µ–∫—Å—Ç?")
        		return
        text = f".–¥–ª–∏–Ω–∞ {message.text[7:]}"
        givs = await self.message_q(
            text,
            bot,
            mark_read=True,
            delete=True,
        )
        await utils.answer(message, givs.text)
        
    @loader.command()
    async def —Å–∞–ø(self, message):
        """–ø–µ—Ä–µ–¥–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤ Iris Support Bot"""
        bot = "@IrisSupportBot"
        if len(message.text) < 6:
        	await utils.answer(message, "–ì–¥–µ —Ç–µ–∫—Å—Ç?")
        	return
        text = f".{message.text[4:]}"
        offtoptext = """‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ! –í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –∑–∞–ø—Ä–µ—â—ë–Ω –æ—Ñ—Ñ—Ç–æ–ø.</b>
<i>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–±–æ–ª—Ç–∞—Ç—å –∏–ª–∏ –æ–±—Å—É–¥–∏—Ç—å —á—Ç–æ-—Ç–æ, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ </i><a href="https://t.me/iris_talk"><i>–æ—Ñ—Ñ—Ç–æ–ø-—á–∞—Ç–∏–∫</i></a><i>!</i>

‚ÑπÔ∏è <b>–û—Ñ—Ñ—Ç–æ–ø</b> ‚Äî <u>—Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ —Ç–µ–º–µ —á–∞—Ç–∞</u>. –≠—Ç–æ—Ç —á–∞—Ç —Ç–æ–ª—å–∫–æ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º <a href="https://t.me/iris_cm">Iris | –ß–∞—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä–∞</a>.

üí¨ –ï—Å–ª–∏ –≤—ã –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –≤ –ø–æ–ª–Ω–æ–º –ø—Ä–∞–≤–µ –º–æ–≥—É—Ç –≤—ã–¥–∞—Ç—å –≤–∞–º –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏–∑ —á–∞—Ç–∞!
        """
        if message.text[4:] == " –æ—Ñ—Ñ—Ç–æ–ø" or message.text[4:] == "–æ—Ñ—Ñ—Ç–æ–ø":
          await self.inline.form(
    text=offtoptext,
    message=message,
    reply_markup = [
    [
        {"text": "üí¨ –í –æ—Ñ—Ñ—Ç–æ–ø-—á–∞—Ç", "url": f"https://t.me/iris_talk"}, {"text": "üß† –°—Ç–∞—Ç—å —É–º–Ω–µ–µ", "url": f"https://teletype.in/@iris_cm/rules"}
    ],
    ])
          return
        givs = await self.message_q(
            text,
            bot,
            mark_read=True,
            delete=True,
        )
        await utils.answer(message, givs.text)
    
        
       
        
        
