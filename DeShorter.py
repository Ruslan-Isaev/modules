version = (1, 0, 0)

# meta developer: @RUIS_VlP
import aiohttp
from .. import loader, utils

@loader.tds
class DeShorterMod(loader.Module):
    """–ü–æ–º–æ–≥–∞–µ—Ç —Ä–∞—Å—à–∏—Ñ–æ–≤–∞—Ç—å —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É\n\n–ú–æ–¥—É–ª—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –æ—Ç vk.cc\n\n–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ (bit.ly, clck.ru –∏ —Ç–¥) –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."""

    strings = {
        "name": "DeShorter",
    }

    @loader.command()
    async def deschortcmd(self, message):
        """<url> - —Ä–∞—Å—à–∏—Ñ—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É."""
        args = utils.get_args_raw(message)
        if not args:
        	await utils.answer(message, "‚ùå <b>–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—Å—ã–ª–∫—É!</b>")
        	return
        url = args.split(" ")[0]
        async with aiohttp.ClientSession() as session:
        	async with session.get(url) as response:
        		final_url = str(response.url)
        if final_url.startswith("https://clck.ru/showcaptcha?"):
        	await utils.answer(message, "‚õîÔ∏è <b>–ù–∞</b> <code>clck.ru<code> <b>—Å—Ä–∞–±–æ—Ç–∞–ª–∞ –∫–∞–ø—á–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</b>")
        else:
        	await utils.answer(message, f"üîó <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b>\n<code>{final_url}</code>")