version = (1, 0, 0)

# meta developer: @RUIS_VlP

import random
from datetime import timedelta
from telethon import events
from telethon import functions
from telethon.tl.types import Message
from .. import loader, utils

bot = "@GrokAI"
bot_id = 7828964235

@loader.tds
class GrokAIMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Grok —á–µ—Ä–µ–∑ –±–æ—Ç–∞ @GrokAI"""

    strings = {
        "name": "GrokAI",
    }
            	
    @loader.command()
    async def grokdelcmd(self, message):
        """- –æ—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é (–∫–æ–Ω—Ç–µ–∫—Å—Ç)"""
        chat = bot_id
        text = "/newchat"
        async with message.client.conversation(bot) as conv:
            response = await conv.send_message(text)
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            await utils.answer(message, "‚úÖ <b>–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!</b>")
            await response.delete()
            await response1.delete()
           
           
    @loader.command()
    async def grokcmd(self, message):
        """<—Ç–µ–∫—Å—Ç> - –∑–∞–ø—Ä–æ—Å –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Grok"""
        chat = bot_id
        reply = await message.get_reply_message()
        text = reply.raw_text if reply else utils.get_args_raw(message)
        if len(text) < 3:
        	await utils.answer(message, "üö´<b>–û—à–∏–±–∫–∞!\n–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π –∑–∞–ø—Ä–æ—Å.</b>")
        	return
        await utils.answer(message, "ü§ñ<b>–ù–µ–π—Ä–æ—Å–µ—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...</b>")
        async with message.client.conversation(bot) as conv:
            response = await conv.send_message(text)
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            await utils.answer(message, f"‚ùì<b>–í–æ–ø—Ä–æ—Å:</b> \n{text}\n\nü§ñ <b>–û—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>\n{response1.text}")
            await response.delete()
            await response1.delete()