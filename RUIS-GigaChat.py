version = (1, 0, 0)

# meta developer: @RUIS_VlP

import random
from datetime import timedelta
from telethon import events
from telethon import functions
from telethon.tl.types import Message
from .. import loader, utils

bot = "@gigachat_bot"

@loader.tds
class RUISGigaChatMod(loader.Module):
    """GigaChat –±–µ–∑ API –∫–ª—é—á–∞. –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ ChatGPT 3. –ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤: @gigachat_bot. –ú–æ–¥—É–ª—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ –ª–∏—Ü–µ–Ω–∑–∏–∏ MIT."""

    strings = {
        "name": "RUIS-GigaChat",
    }
    
    @loader.command()
    async def gpt(self, message):
        """<—Ç–µ–∫—Å—Ç> - –∑–∞–ø—Ä–æ—Å –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ GigaChat"""
        chat = 6218783903
        reply = await message.get_reply_message()
        text = reply.raw_text if reply else message.text[5:]
        if len(text) < 3:
        	await utils.answer(message, "üö´<b>–û—à–∏–±–∫–∞!\n–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π –∑–∞–ø—Ä–æ—Å.</b>")
        	return
        await utils.answer(message, "ü§ñ<b>–ù–µ–π—Ä–æ—Å–µ—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...</b>")
        async with message.client.conversation(bot) as conv:
            
            response = await conv.send_message(text)
            
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            
            if "üí≠–ï—â—ë —á—É—Ç—å-—á—É—Ç—å, –≥–æ—Ç–æ–≤–ª—é –æ—Ç–≤–µ—Ç" in response1.text:
            	response2 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            	await utils.answer(message, f"‚ùì<b>–í–æ–ø—Ä–æ—Å:</b> \n{text}\n\nü§ñ <b>–û—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>\n{response2.text}")
            	await response.delete()
            	await response1.delete()
            	await response2.delete()
            	return
            else:
            	await utils.answer(message, f"‚ùì<b>–í–æ–ø—Ä–æ—Å:</b> \n{text}\n\nü§ñ <b>–û—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>\n{response1.text}")
            	await response.delete()
            	await response1.delete()
            	
    @loader.command()
    async def deletecontext(self, message):
        """- –æ—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é(–∫–æ–Ω—Ç–µ–∫—Å—Ç)"""
        chat = 6218783903
        text = "üÜï –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥"
        async with message.client.conversation(bot) as conv:
            response = await conv.send_message(text)
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            await utils.answer(message, "‚úÖ<b>–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!</b>")
            await response.delete()
            await response1.delete()
            